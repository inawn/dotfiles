;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(ess--completing-hist imenu--history-list twittering-hashtag-history dummy-hist twittering-user-history dired-shell-command-history junk-hist regexp-history query-replace-history shell-command-history coding-system-history ido-file-history ido-buffer-history file-name-history yes-or-no-p-history buffer-name-history minibuffer-history extended-command-history))
(setq ess--completing-hist '("list" "hist" "RNG" "rnorm" "pbinom"))
(setq twittering-hashtag-history '("t"))
(setq twittering-user-history '("vantak" "__ifhlt__"))
(setq dired-shell-command-history '("cp  ~/Dropbox/.emacs.d/" "cp  .emacs.d/" "cp ~/.emacs.d/init.el .emacs.d/init.el" "cp "))
(setq regexp-history '("C+-*"))
(setq query-replace-history '("scores" "totals" "p" "person" "JANE_LIST" "lol" "JANE_LIST" "LOL" "JANE_LIST" "LOLCOIFFEURS_LIST" "KEYWORDS" "LOLCOIFFEURS_KEYWORDS" "kx" "xk" "dx" "dk" "V" "O" "m" "\\mu" "エド・ディル" "エドディル" "" "myapp.views" "underscore" "grave" "yami" "miya" "miya" "yami"))
(setq shell-command-history '("mv yasnippet-0.6.1c/yasnippet-config.el" "mv yasnippet-0.6.1c/" "mv ./yasnippet-0.6.1c/" "cp yasnippet-0.6.1c/" "mv yasnippet-0.6.1c/yasnippet-config.el " "mv yasnippet-0.6.1c/" "mv yasnippet-config.el ~/.emacs.d/plugins/" "less" "rmdir"))
(setq coding-system-history '("raw-text"))
(setq ido-file-history '("snippets" "etc" "bottle" "2_recommendation" "clintl" "keys.py" "pybot" "fourier.tex" "dysimeq" "matrix" "saitekika1.tex" "kaiseki.tex" "." "empty.Rd" "p" "." "test.org" "init.el" ".skk-jisyo{.skk-jisyo | .skk-jisyo.lock | .skk-jisyo~ | .skk-jisyo.BAK}" ".s{.simplenote/ | .ssh/ | .swt/}" "mlinact [No match]" "ml[ocaml/]" ".tmux.conf" "k[kazuki/]" "ho[home/]" "/{./ | ../}" "" "views.py" "ya" "auto-in"))
(setq ido-buffer-history '(".dir-locals.el" ".zshenv" "*Messages*" ".skk-uim-jisyo.lock" "README" "html-fold.el" "*ansi-term-1*" "*Python*" "*ansi-term-1*" "*Messages*" "*Python*<3>" "HelloWorld.scala" "id_rsa" "project.clj" ".inputrc" "*scratch*" "init.el" "mm" ".xinitrc" "mm" "saitekika1.tex<2>" "saitekika1.pdf" "tmp.tex" "ess-help.el" "*eshell*" "*unsent mail*" "dir" "twittering-mode.el" ".skk-jisyo" "{agtzaW1wbGUtbm90ZXINCxIETm90ZRiFw_0LDA | *Simplenote* | agtzaW1wbGUtbm90ZXIqCxIETm90ZSIgNDlhMjY1OTFhYzQxMTFlMWE2ZTIwM2M2MzU5ODhjNjMM | ginrinj.txt | agtzaW1wbGUtbm90ZXIqCxIETm90ZSIgNTBkMGQ5MDdhMWQxOGRkZjQzODdmY2VhNTNiZmQ1N2YM | *Backtrace* | agtzaW1wbGUtbm90ZXIqCxIETm90ZSIgMTNkMzEwMWY3ZGE2NDYxOGE4NTExYjQxNTMzNDhlMzcM | ginrinj.txt~ | tubt | .emacs | kazuki | / | ...}"))
(setq file-name-history '("~/dotfiles/.emacs.d/" "~/.xinitrc" "~/.zsh" "~/.zshenv" "/etc/zsh" "~/.xinitrc" "~/.xbindkeysrc" "/usr/bin/touchpad-toggle.sh" "/usr/bin/" "~/" "~/dotfiles/.zshrc" "~/dotfiles/.emacs.d/" "~/.emacs.d/" "~/.emacs.d/elpa/undo-tree-20130812.1224" "~/.emacs.d/" "~/.emacs.d/.skk-uim-jisyo.lock" "~/dotfiles/" "~/dotfiles/.gitignore" "~/dotfiles/install.sh" "~/.emacs.d/.gitignore" "~/.emacs.d/" "~/.emacs.d/elisp/html-fold.el" "~/.emacs.d/el-get/" "~/Dropbox/work/" "~/dotfiles/.emacs.d/elpalist.txt" "~/dotfiles/" "~/dotfiles/.gitignore" "~/dwork/clojure/sample/src/scala/" "~/dwork/clojure/sample/src/scala/HelloWorld.scala" "~/dwork/clojure/sample"))
(setq yes-or-no-p-history '("yes" "y" "yes"))
(setq buffer-name-history '(".dir-locals.el" ".zshenv" "*Messages*" ".skk-uim-jisyo.lock" "README" "html-fold.el" "*ansi-term-1*" "*Python*" "*ansi-term-1*" "*Messages*" "*Python*<3>" "HelloWorld.scala" "id_rsa" "project.clj" ".inputrc" "*scratch*" "init.el" "mm" ".xinitrc" "mm" "saitekika1.pdf" "tmp.tex" "ess-help.el" "*eshell*" "*unsent mail*" "dir" "twittering-mode.el" ".skk-jisyo" "agtzaW1wbGUtbm90ZXINCxIETm90ZRiFw_0LDA" "agtzaW1wbGUtbm90ZXIqCxIETm90ZSIgYjhhYzk3Mjc4NmYzNDAwYzg3MmI3ZWYxZGZiNDI1MTcM"))
(setq minibuffer-history '("list-load-path-shadows" "help" "list-load" "eval" "e" "exit" #("0" 0 1 (fontified t)) #("cmigemo!" 0 8 (fontified t face font-lock-comment-face)) #("cmigemo" 0 1 (fontified t face font-lock-constant-face) 1 7 (fontified t face font-lock-constant-face)) "#" "exit" "eva" "list-load" "exit" "list-load-" "eval" "exit" #("-----------------------------------------------------------" 0 59 (fontified t face font-lock-comment-face)) "exit" #("C-pC" 0 4 (fontified t face font-lock-string-face)) #("C-p" 0 3 (fontified t face font-lock-string-face)) #("f9" 0 2 (fontified t face font-lock-string-face)) #("auto-save-buffers-enhanced:" 0 17 (fontified t face font-lock-comment-face) 17 25 (fontified t face font-lock-comment-face) 25 26 (fontified t rear-nonsticky t face font-lock-comment-face) 26 27 (fontified t face font-lock-comment-face)) "https://github.com/ataka/html-fold" "html-fold" "auto-install" "eval" "auto-install" #("html-fold" 0 9 (fontified t)) "exitq"))
(setq extended-command-history '("help" "list-load-path-shadows" "eval-current-buffer" "list-packages" "list-faces-display" "run-python" "shell" "eval-region" "package-initialize" "auto-complete-mode" "yas/insert-snippet" "server-start" "indent-region" "helm-imenu" "customize-group" "iwconfig" "eshell" "org-version" "org-mode" "ediff" "bm-customize" "which-function-mode" "helm-M-x" "helm-configuration" "helm-M-x" "helm-execute-persistent-action" "helm-configuration" "exit" "helm-find" "helm-find-files"))
